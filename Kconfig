# This file is part of vermillion.

# Vermillion is free software: you can redistribute it and/or modify it
# under the terms of the GNU General Public License as published
# by the Free Software Foundation, version 3.

# Vermillion is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.
# See the GNU General Public License for more details.

# You should have received a copy of the GNU General Public License
# along with vermillion. If not, see <https://www.gnu.org/licenses/>.

# Architecture configuration

menu "General setup"

config STACK_SIZE
    hex "Kernel stack size"
    default 0x8000

choice ARCH
    prompt "Architecture"
config ARCH_ARM
    bool "ARM"
config ARCH_I686
    bool "i686"
endchoice

menu "Architecture options"
source arch/arm/Kconfig
source arch/i686/Kconfig
endmenu

menu "Compilation"
config ARCH
    string "Arch name"
    default arm if ARCH_ARM
    default i686 if ARCH_I686
config TARGET
    string "Target triple"
    default arm-none-eabi if ARCH_ARM
    default i686-elf      if ARCH_I686
config CFLAGS_ARCH
    string "Additional Arch CFLAGS"
    default "-fpic -Wl,--no-warn-rwx-segment" if ARCH_ARM
config CFLAGS_BOARD
    string "Additional Board CFLAGS"
endmenu

menu "FDPIC Loader"
config LOADER_FILE
    string "Init file path"
    default "init.bin"
config LOADER_EMBED
    bool "Embed init into kernel"
    default n
endmenu

menu "General purpose RAM"
config RAM_ADDRESS
    hex "Mapped address"
    default 0x100000   if ARCH_I686
config RAM_SIZE
    hex "Full length"
endmenu

menu "Libc options"
config STDIO_STDIN
    string "Stdin driver"
config STDIO_STDOUT
    string "Stdout driver"
config STDIO_STDERR
    string "Stderr driver"
endmenu

config LED_SUCCESS
    bool
menuconfig LED_SUCCESS
    prompt "Board LED (Success)"
config LED_SUCCESS_PIN
    int "Pin"
    depends on LED_SUCCESS
config LED_FAILURE
    bool
menuconfig LED_FAILURE
    prompt "Board LED (Failure)"
config LED_FAILURE_PIN
    int "Pin"
    depends on LED_FAILURE

endmenu

# Driver configuration

menu "Device drivers"

# Video configuration

menu "Video Output"
config VIDEO_ILI9488_SPI
    bool
menuconfig VIDEO_ILI9488_SPI
    prompt "Ili9488 (SPI)"
config ILI9488_DCRS
    int "DCRS pin"
    default 12
    depends on VIDEO_ILI9488_SPI
config ILI9488_LEDS
    int "LEDS pin"
    default 11
    depends on VIDEO_ILI9488_SPI
endmenu

# Audio configuration

menu "Audio Output"
config AUDIO_BUZZER
    bool
menuconfig AUDIO_BUZZER
    prompt "Buzzer"
config BUZZER_PIN
    int "Output pin"
    default 13
    depends on AUDIO_BUZZER
endmenu

# Storage configuration

menu "Storage"
config STORAGE_MEMORY
    bool "Memory device"
config STORAGE_SUNXI_MMC
    bool "Sunxi SD/MMC"
    default y if ARCH_ARM_SUNXI
    depends on ARCH_ARM
endmenu

# Filesystem configuration

menu "Filesystem"
config FS_FAT32_MBR
    bool "Fat32 MBR"
endmenu

# Serial configuration

menu "Serial"
config SERIAL_SUNXI_UART
    bool "Sunxi UART"
    default y if ARCH_ARM_SUNXI
    depends on ARCH_ARM
config SERIAL_I686
    bool "x86 serial ports"
    default y if ARCH_I686
    depends on ARCH_I686
endmenu

# Timer configuration

menu "Timer"
config TIMER_SUNXI_TIMER
    bool
menuconfig TIMER_SUNXI_TIMER
    prompt "Sunxi Timer"
    default y if ARCH_ARM_SUNXI
    depends on ARCH_ARM
config SUNXI_TIMER0_IRQ
    int "Timer0 IRQ"
    depends on TIMER_SUNXI_TIMER
config SUNXI_TIMER1_IRQ
    int "Timer1 IRQ"
    depends on TIMER_SUNXI_TIMER
endmenu

# SPI configuration

menu "SPI"
config SPI_BITBANG
    bool
menuconfig SPI_BITBANG
    prompt "Bitbang"
config BITBANG_SPI_SS
    int "SS pin"
    default 0
    depends on SPI_BITBANG
config BITBANG_SPI_SCK
    int "SCK pin"
    default 1
    depends on SPI_BITBANG
config BITBANG_SPI_MOSI
    int "MOSI pin"
    default 2
    depends on SPI_BITBANG
config BITBANG_SPI_MISO
    int "MISO pin"
    default 3
    depends on SPI_BITBANG
endmenu

# GPIO configuration

menu "GPIO"
config GPIO_SUNXI_GPIO
    bool "Sunxi GPIO"
    default y if ARCH_ARM_SUNXI
    depends on ARCH_ARM
endmenu

endmenu
